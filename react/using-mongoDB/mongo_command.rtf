{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset0 AppleColorEmoji;
}
{\colortbl;\red255\green255\blue255;\red170\green171\blue37;\red0\green0\blue0;\red255\green255\blue255;
\red56\green185\blue199;\red178\green178\blue178;\red135\green138\blue4;\red219\green39\blue218;\red133\green0\blue2;
\red57\green192\blue38;\red50\green244\blue241;\red202\green51\blue35;\red55\green239\blue32;\red207\green125\blue255;
\red125\green125\blue125;\red86\green32\blue244;}
{\*\expandedcolortbl;;\cssrgb\c72330\c71683\c18597;\csgray\c0;\csgray\c100000;
\cssrgb\c25544\c77008\c82022;\cssrgb\c75000\c75000\c75000;\cssrgb\c60000\c60000\c0;\cssrgb\c89513\c29738\c88483;\cssrgb\c60000\c0\c0;
\cssrgb\c25704\c77963\c19556;\cssrgb\c19571\c95778\c95688;\cssrgb\c83898\c28665\c18024;\cssrgb\c22317\c93015\c16432;\cssrgb\c85420\c59134\c100000;
\cssrgb\c56351\c56353\c56351;\cssrgb\c41680\c25960\c96645;}
\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 Compiled with warnings.\cf3 \
\
\cf4 \cb3 ./src/components/ErrorComponent.jsx\cf3 \cb1 \
  
\f1\b Line 1:16:
\f0\b0   'useState' is defined but never used   \cf2 \ul \ulc2 no-unused-vars\cf3 \ulnone \
  
\f1\b Line 1:26:
\f0\b0   'useEffect' is defined but never used  \cf2 \ul no-unused-vars\cf3 \ulnone \
  
\f1\b Line 2:9:
\f0\b0    'navigate' is defined but never used   \cf2 \ul no-unused-vars\cf3 \ulnone \
\
\cf4 \cb3 ./src/components/Search.jsx\cf3 \cb1 \
  
\f1\b Line 1:17:
\f0\b0   'useState' is defined but never used          \cf2 \ul no-unused-vars\cf3 \ulnone \
  
\f1\b Line 2:10:
\f0\b0   'useNavigate' is defined but never used       \cf2 \ul no-unused-vars\cf3 \ulnone \
  
\f1\b Line 2:23:
\f0\b0   'LocationProvider' is defined but never used  \cf2 \ul no-unused-vars\cf3 \ulnone \
\
\cf4 \cb3 ./src/components/Person.jsx\cf3 \cb1 \
  
\f1\b Line 31:53:
\f0\b0   Using target="_blank" without rel="noopener noreferrer" is a security risk: see https://mathiasbynens.github.io/rel-noopener  \cf2 \ul react/jsx-no-target-blank\cf3 \ulnone \
\
Search for the \cf2 \ul keywords\cf3 \ulnone  to learn more about each warning.\
To ignore, add \cf5 // eslint-disable-next-line\cf3  to the line before.\
\
^C\
yotsugi:luke_api_walker aki$ \
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
yotsugi:luke_api_walker aki$ cd ../../\
yotsugi:react aki$ ls\
axios-pokemon-api	class			hook-form		navbar-context		pokemon-api		routing-practice\
big-inversion		first-react		luke-api-walker		node_modules		prop-it-up		tabs\
box-generator		first-react-with-jsx	more-forms		package-lock.json	putting-it-together	todo-list\
yotsugi:react aki$ cd class/\
yotsugi:class aki$ ls\
class\
yotsugi:class aki$ cd class/\
yotsugi:class aki$ ls\
README.md		node_modules		package-lock.json	package.json		public			src\
yotsugi:class aki$ cp ~/Downloads/\
Display all 260 possibilities? (y or n)\
yotsugi:class aki$ cp ~/Downloads/heart_emoji.png \
.gitignore         README.md          node_modules/      package-lock.json  package.json       public/            src/               \
yotsugi:class aki$ cp ~/Downloads/HelloExpress\
HelloExpress/     HelloExpress.zip  \
yotsugi:class aki$ cp ~/Downloads/HelloExpress/\
package.json  server.js     \
yotsugi:class aki$ cp ~/Downloads/HelloExpress/server.js .\
yotsugi:class aki$ code .\
yotsugi:class aki$ \
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
yotsugi:class aki$ node server.js\
Server is locked and loaded on port 8000!\
^C\
yotsugi:class aki$ npm install -g nodemon\
\cf6 \cb3 npm\cf3 \cb1  \cb7 WARN\cb1  \cf8 checkPermissions\cf3  Missing write access to /usr/local/lib/node_modules/nodemon\
\cf6 \cb3 npm\cf3 \cb1  \cb7 WARN\cb1  \cf8 checkPermissions\cf3  Missing write access to /usr/local/lib/node_modules\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1  \cf8 code\cf3  EACCES\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1  \cf8 syscall\cf3  access\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1  \cf8 path\cf3  /usr/local/lib/node_modules/nodemon\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1  \cf8 errno\cf3  -13\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1  Error: EACCES: permission denied, access '/usr/local/lib/node_modules/nodemon'\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1   [Error: EACCES: permission denied, access '/usr/local/lib/node_modules/nodemon'] \{\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1    stack: "Error: EACCES: permission denied, access '/usr/local/lib/node_modules/nodemon'",\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1    errno: -13,\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1    code: 'EACCES',\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1    syscall: 'access',\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1    path: '/usr/local/lib/node_modules/nodemon'\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1  \}\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1  \
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1  The operation was rejected by your operating system.\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1  It is likely you do not have the permissions to access this file as the current user\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1  \
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1  If you believe this might be a permissions issue, please double-check the\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1  permissions of the file and its containing directories, or try running\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1  the command again as root/Administrator.\
\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1  A complete log of this run can be found in:\
\cf6 \cb3 npm\cf3 \cb1  \cf9 \cb3 ERR!\cf3 \cb1      /Users/aki/.npm/_logs/2020-03-06T08_11_49_793Z-debug.log\
yotsugi:class aki$ sudo !!\
sudo npm install -g nodemon\
Password:\
/usr/local/bin/nodemon -> /usr/local/lib/node_modules/nodemon/bin/nodemon.js\
\
> nodemon@2.0.2 postinstall /usr/local/lib/node_modules/nodemon\
> node bin/postinstall || exit 0\
\
\cf10 Love nodemon? You can now support the project via the open collective:\cf3 \
 > 
\f1\b \cf11 https://opencollective.com/nodemon/donate
\f0\b0 \cf3 \
\
+ nodemon@2.0.2\
updated 1 package in 2.846s\
yotsugi:class aki$ \
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
yotsugi:class aki$ nodemon server.js\
\cf2 [nodemon] 2.0.2\cf3 \
\cf2 [nodemon] to restart at any time, enter `rs`\cf3 \
\cf2 [nodemon] watching dir(s): *.*\cf3 \
\cf2 [nodemon] watching extensions: js,mjs,json\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
Server is locked and loaded on port 8000!\
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
Server is locked and loaded on port 8000!\
^Cyotsugi:class aki$ nodemon server.js\
\cf2 [nodemon] 2.0.2\cf3 \
\cf2 [nodemon] to restart at any time, enter `rs`\cf3 \
\cf2 [nodemon] watching dir(s): *.*\cf3 \
\cf2 [nodemon] watching extensions: js,mjs,json\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
Server is locked and loaded on port 8000!\
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
Server is locked and loaded on port 8000!\
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
Server is locked and loaded on port 8000!\
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
Server is locked and loaded on port 8000!\
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
Server is locked and loaded on port 8000!\
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
Server is locked and loaded on port 8000!\
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
Server is locked and loaded on port 8000!\
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
Server is locked and loaded on port 8000!\
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
Server is locked and loaded on port 8000!\
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
Server is locked and loaded on port 8000!\
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
Server is locked and loaded on port 8000!\
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
Server is locked and loaded on port 8000!\
ls\
^Cyotsugi:class aki$ ld\
ld: warning: No version-min specified on command line\
ld: no object files specified\
yotsugi:class aki$ git status\
On branch master\
Your branch is up to date with 'origin/master'.\
\
Changes not staged for commit:\
  (use "git add <file>..." to update what will be committed)\
  (use "git checkout -- <file>..." to discard changes in working directory)\
\
	\cf12 modified:   src/App.js\cf3 \
\
Untracked files:\
  (use "git add <file>..." to include in what will be committed)\
\
	\cf12 server.js\cf3 \
	\cf12 ../../postmanPokemon/\cf3 \
\
no changes added to commit (use "git add" and/or "git commit -a")\
yotsugi:class aki$ cd ..\
yotsugi:class aki$ cd ..\
yotsugi:react aki$ ls\
axios-pokemon-api	class			hook-form		navbar-context		pokemon-api		putting-it-together	todo-list\
big-inversion		first-react		luke-api-walker		node_modules		postmanPokemon		routing-practice\
box-generator		first-react-with-jsx	more-forms		package-lock.json	prop-it-up		tabs\
yotsugi:react aki$ git status\
On branch master\
Your branch is up to date with 'origin/master'.\
\
Changes not staged for commit:\
  (use "git add <file>..." to update what will be committed)\
  (use "git checkout -- <file>..." to discard changes in working directory)\
\
	\cf12 modified:   class/class/src/App.js\cf3 \
\
Untracked files:\
  (use "git add <file>..." to include in what will be committed)\
\
	\cf12 class/class/server.js\cf3 \
	\cf12 postmanPokemon/\cf3 \
\
no changes added to commit (use "git add" and/or "git commit -a")\
yotsugi:react aki$ git add .\
yotsugi:react aki$ git commit\
[master 8ca81a9] tried postman\
 Committer: Akimi Yano <aki@yotsugi.local>\
Your name and email address were configured automatically based\
on your username and hostname. Please check that they are accurate.\
You can suppress this message by setting them explicitly:\
\
    git config --global user.name "Your Name"\
    git config --global user.email you@example.com\
\
After doing this, you may fix the identity used for this commit with:\
\
    git commit --amend --reset-author\
\
 5 files changed, 2577 insertions(+), 1 deletion(-)\
 create mode 100755 react/class/class/server.js\
 create mode 100644 react/postmanPokemon/pokemon1.jscsrc\
 create mode 100644 react/postmanPokemon/pokemon2.jscsrc\
 create mode 100644 react/postmanPokemon/pokemon3.jscsrc\
yotsugi:react aki$ git push\
Enumerating objects: 18, done.\
Counting objects: 100% (18/18), done.\
Delta compression using up to 8 threads\
Compressing objects: 100% (11/11), done.\
Writing objects: 100% (12/12), 10.48 KiB | 5.24 MiB/s, done.\
Total 12 (delta 7), reused 0 (delta 0)\
remote: Resolving deltas: 100% (7/7), completed with 5 local objects.\
To https://github.com/akimi-yano/mern-stack.git\
   aec0fd8..8ca81a9  master -> master\
yotsugi:react aki$ ls\
axios-pokemon-api	class			hook-form		navbar-context		pokemon-api		putting-it-together	todo-list\
big-inversion		first-react		luke-api-walker		node_modules		postmanPokemon		routing-practice\
box-generator		first-react-with-jsx	more-forms		package-lock.json	prop-it-up		tabs\
yotsugi:react aki$ mkdir faker-api\
yotsugi:react aki$ ls\
axios-pokemon-api	class			first-react-with-jsx	more-forms		package-lock.json	prop-it-up		tabs\
big-inversion		faker-api		hook-form		navbar-context		pokemon-api		putting-it-together	todo-list\
box-generator		first-react		luke-api-walker		node_modules		postmanPokemon		routing-practice\
yotsugi:react aki$ cd faker-api/\
yotsugi:faker-api aki$ ls\
yotsugi:faker-api aki$ npm create-react-app faker_api\
\
Usage: npm <command>\
\
where <command> is one of:\
    access, adduser, audit, bin, bugs, c, cache, ci, cit,\
    clean-install, clean-install-test, completion, config,\
    create, ddp, dedupe, deprecate, dist-tag, docs, doctor,\
    edit, explore, fund, get, help, help-search, hook, i, init,\
    install, install-ci-test, install-test, it, link, list, ln,\
    login, logout, ls, org, outdated, owner, pack, ping, prefix,\
    profile, prune, publish, rb, rebuild, repo, restart, root,\
    run, run-script, s, se, search, set, shrinkwrap, star,\
    stars, start, stop, t, team, test, token, tst, un,\
    uninstall, unpublish, unstar, up, update, v, version, view,\
    whoami\
\
npm <command> -h  quick help on <command>\
npm -l            display full usage info\
npm help <term>   search for help on <term>\
npm help npm      involved overview\
\
Specify configs in the ini-formatted file:\
    /Users/aki/.npmrc\
or on the command line via: npm <command> --key value\
Config info can be viewed via: npm help config\
\
npm@6.13.4 /usr/local/lib/node_modules/npm\
\
yotsugi:faker-api aki$ npx create-react-app faker_api\
npx: installed 99 in 4.211s\
\
Creating a new React app in \cf10 /Users/aki/Desktop/Github Repositories/mern/react/faker-api/faker_api\cf3 .\
\
Installing packages. This might take a couple of minutes.\
Installing \cf5 react\cf3 , \cf5 react-dom\cf3 , and \cf5 react-scripts\cf3  with \cf5 cra-template\cf3 ...\
\
\
> fsevents@1.2.11 install /Users/aki/Desktop/Github Repositories/mern/react/faker-api/faker_api/node_modules/jest-haste-map/node_modules/fsevents\
> node-gyp rebuild\
\
  SOLINK_MODULE(target) Release/.node\
  CXX(target) Release/obj.target/fse/fsevents.o\
  SOLINK_MODULE(target) Release/fse.node\
\
> fsevents@1.2.11 install /Users/aki/Desktop/Github Repositories/mern/react/faker-api/faker_api/node_modules/watchpack/node_modules/fsevents\
> node-gyp rebuild\
\
  SOLINK_MODULE(target) Release/.node\
  CXX(target) Release/obj.target/fse/fsevents.o\
  SOLINK_MODULE(target) Release/fse.node\
\
> fsevents@1.2.11 install /Users/aki/Desktop/Github Repositories/mern/react/faker-api/faker_api/node_modules/webpack-dev-server/node_modules/fsevents\
> node-gyp rebuild\
\
  SOLINK_MODULE(target) Release/.node\
  CXX(target) Release/obj.target/fse/fsevents.o\
  SOLINK_MODULE(target) Release/fse.node\
\
> core-js@2.6.11 postinstall /Users/aki/Desktop/Github Repositories/mern/react/faker-api/faker_api/node_modules/babel-runtime/node_modules/core-js\
> node -e "try\{require('./postinstall')\}catch(e)\{\}"\
\
\
> core-js@3.6.4 postinstall /Users/aki/Desktop/Github Repositories/mern/react/faker-api/faker_api/node_modules/core-js\
> node -e "try\{require('./postinstall')\}catch(e)\{\}"\
\
+ react@16.13.0\
+ react-scripts@3.4.0\
+ cra-template@1.0.2\
+ react-dom@16.13.0\
added 1774 packages from 767 contributors and audited 918958 packages in 46.681s\
\
50 packages are looking for funding\
  run `npm fund` for details\
\
found \cf13 0\cf3  vulnerabilities\
\
\
Installing template dependencies using npm...\
\
> core-js-pure@3.6.4 postinstall /Users/aki/Desktop/Github Repositories/mern/react/faker-api/faker_api/node_modules/core-js-pure\
> node -e "try\{require('./postinstall')\}catch(e)\{\}"\
\
\cf11 Thank you for using core-js (\cf14  https://github.com/zloirock/core-js \cf11 ) for polyfilling JavaScript standard library!\cf3 \
\
\cf11 The project needs your help! Please consider supporting of core-js on Open Collective or Patreon: \cf3 \
\cf11 >\cf14  https://opencollective.com/core-js \cf3 \
\cf11 >\cf14  https://www.patreon.com/zloirock \cf3 \
\
\cf11 Also, the author of core-js (\cf14  https://github.com/zloirock \cf11 ) is looking for a good job -)\cf3 \
\
\cf6 \cb3 npm\cf3 \cb1  \cb7 WARN\cb1  eslint-config-react-app@5.2.0 requires a peer of eslint-plugin-flowtype@3.x but none is installed. You must install peer dependencies yourself.\
\cf6 \cb3 npm\cf3 \cb1  \cb7 WARN\cb1  tsutils@3.17.1 requires a peer of typescript@>=2.8.0 || >= 3.2.0-dev || >= 3.3.0-dev || >= 3.4.0-dev || >= 3.5.0-dev || >= 3.6.0-dev || >= 3.6.0-beta || >= 3.7.0-dev || >= 3.7.0-beta but none is installed. You must install peer dependencies yourself.\
\
+ @testing-library/jest-dom@4.2.4\
+ @testing-library/user-event@7.2.1\
+ @testing-library/react@9.5.0\
added 38 packages from 55 contributors and audited 919164 packages in 10.283s\
\
51 packages are looking for funding\
  run `npm fund` for details\
\
found \cf13 0\cf3  vulnerabilities\
\
Removing template package using npm...\
\
\cf6 \cb3 npm\cf3 \cb1  \cb7 WARN\cb1  eslint-config-react-app@5.2.0 requires a peer of eslint-plugin-flowtype@3.x but none is installed. You must install peer dependencies yourself.\
\cf6 \cb3 npm\cf3 \cb1  \cb7 WARN\cb1  tsutils@3.17.1 requires a peer of typescript@>=2.8.0 || >= 3.2.0-dev || >= 3.3.0-dev || >= 3.4.0-dev || >= 3.5.0-dev || >= 3.6.0-dev || >= 3.6.0-beta || >= 3.7.0-dev || >= 3.7.0-beta but none is installed. You must install peer dependencies yourself.\
\
removed 1 package and audited 919163 packages in 6.625s\
\
51 packages are looking for funding\
  run `npm fund` for details\
\
found \cf13 0\cf3  vulnerabilities\
\
\
Success! Created faker_api at /Users/aki/Desktop/Github Repositories/mern/react/faker-api/faker_api\
Inside that directory, you can run several commands:\
\
\cf5   npm start\cf3 \
    Starts the development server.\
\
\cf5   npm run build\cf3 \
    Bundles the app into static files for production.\
\
\cf5   npm test\cf3 \
    Starts the test runner.\
\
\cf5   npm run eject\cf3 \
    Removes this tool and copies build dependencies, configuration files\
    and scripts into the app directory. If you do this, you can\'92t go back!\
\
We suggest that you begin by typing:\
\
\cf5   cd\cf3  faker_api\
  \cf5 npm start\cf3 \
\
Happy hacking!\
yotsugi:faker-api aki$ ls\
faker_api\
yotsugi:faker-api aki$ cd faker_api/\
yotsugi:faker_api aki$ ls\
README.md		node_modules		package-lock.json	package.json		public			src\
yotsugi:faker_api aki$ code .\
yotsugi:faker_api aki$ ls\
README.md		node_modules		package-lock.json	package.json		public			server			src\
yotsugi:faker_api aki$ ls\
README.md		node_modules		package-lock.json	package.json		public			server			src\
yotsugi:faker_api aki$ cd server\
yotsugi:server aki$ ls\
config		controllers	routes		server.js\
yotsugi:server aki$ nodemon server.js\
\cf2 [nodemon] 2.0.2\cf3 \
\cf2 [nodemon] to restart at any time, enter `rs`\cf3 \
\cf2 [nodemon] watching dir(s): *.*\cf3 \
\cf2 [nodemon] watching extensions: js,mjs,json\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
internal/modules/cjs/loader.js:985\
  throw err;\
  ^\
\
Error: Cannot find module 'faker'\
Require stack:\
- /Users/aki/Desktop/Github Repositories/mern/react/faker-api/faker_api/server/server.js\
\cf15     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:982:15)\cf3 \
\cf15     at Function.Module._load (internal/modules/cjs/loader.js:864:27)\cf3 \
\cf15     at Module.require (internal/modules/cjs/loader.js:1044:19)\cf3 \
\cf15     at require (internal/modules/cjs/helpers.js:77:18)\cf3 \
    at Object.<anonymous> (/Users/aki/Desktop/Github Repositories/mern/react/faker-api/faker_api/server/server.js:3:15)\
\cf15     at Module._compile (internal/modules/cjs/loader.js:1158:30)\cf3 \
\cf15     at Object.Module._extensions..js (internal/modules/cjs/loader.js:1178:10)\cf3 \
\cf15     at Module.load (internal/modules/cjs/loader.js:1002:32)\cf3 \
\cf15     at Function.Module._load (internal/modules/cjs/loader.js:901:14)\cf3 \
\cf15     at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\cf3  \{\
  code: \cf10 'MODULE_NOT_FOUND'\cf3 ,\
  requireStack: [\
    \cf10 '/Users/aki/Desktop/Github Repositories/mern/react/faker-api/faker_api/server/server.js'\cf3 \
  ]\
\}\
\cf12 [nodemon] app crashed - waiting for file changes before starting...\cf3 \
^Cyotsugi:server aki$ \
yotsugi:server aki$ \
yotsugi:server aki$ \
yotsugi:server aki$ npm i faker\
\cf6 \cb3 npm\cf3 \cb1  \cb7 WARN\cb1  eslint-config-react-app@5.2.0 requires a peer of eslint-plugin-flowtype@3.x but none is installed. You must install peer dependencies yourself.\
\cf6 \cb3 npm\cf3 \cb1  \cb7 WARN\cb1  tsutils@3.17.1 requires a peer of typescript@>=2.8.0 || >= 3.2.0-dev || >= 3.3.0-dev || >= 3.4.0-dev || >= 3.5.0-dev || >= 3.6.0-dev || >= 3.6.0-beta || >= 3.7.0-dev || >= 3.7.0-beta but none is installed. You must install peer dependencies yourself.\
\
+ faker@4.1.0\
added 1 package from 1 contributor and audited 919164 packages in 7.557s\
\
51 packages are looking for funding\
  run `npm fund` for details\
\
found \cf13 0\cf3  vulnerabilities\
\
yotsugi:server aki$ nodemon server.js\
\cf2 [nodemon] 2.0.2\cf3 \
\cf2 [nodemon] to restart at any time, enter `rs`\cf3 \
\cf2 [nodemon] watching dir(s): *.*\cf3 \
\cf2 [nodemon] watching extensions: js,mjs,json\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
\cf10 [nodemon] restarting due to changes...\cf3 \
\cf10 [nodemon] starting `node server.js`\cf3 \
^Cyotsugi:server aki$ ls\
config		controllers	routes		server.js\
yotsugi:server aki$ gti status\
-bash: gti: command not found\
yotsugi:server aki$ cd ..\
yotsugi:faker_api aki$ cd ..\
yotsugi:faker-api aki$ ls\
faker_api\
yotsugi:faker-api aki$ gti status\
-bash: gti: command not found\
yotsugi:faker-api aki$ git status\
On branch master\
Your branch is up to date with 'origin/master'.\
\
Untracked files:\
  (use "git add <file>..." to include in what will be committed)\
\
	\cf12 ./\cf3 \
\
nothing added to commit but untracked files present (use "git add" to track)\
yotsugi:faker-api aki$ cd ..\
yotsugi:react aki$ git status\
On branch master\
Your branch is up to date with 'origin/master'.\
\
Untracked files:\
  (use "git add <file>..." to include in what will be committed)\
\
	\cf12 faker-api/\cf3 \
\
nothing added to commit but untracked files present (use "git add" to track)\
yotsugi:react aki$ git add .\
yotsugi:react aki$ git commit -m "done"\
[master 2ca7c11] done\
 Committer: Akimi Yano <aki@yotsugi.local>\
Your name and email address were configured automatically based\
on your username and hostname. Please check that they are accurate.\
You can suppress this message by setting them explicitly:\
\
    git config --global user.name "Your Name"\
    git config --global user.email you@example.com\
\
After doing this, you may fix the identity used for this commit with:\
\
    git commit --amend --reset-author\
\
 19 files changed, 15432 insertions(+)\
 create mode 100644 react/faker-api/faker_api/.gitignore\
 create mode 100644 react/faker-api/faker_api/README.md\
 create mode 100644 react/faker-api/faker_api/package-lock.json\
 create mode 100644 react/faker-api/faker_api/package.json\
 create mode 100644 react/faker-api/faker_api/public/favicon.ico\
 create mode 100644 react/faker-api/faker_api/public/index.html\
 create mode 100644 react/faker-api/faker_api/public/logo192.png\
 create mode 100644 react/faker-api/faker_api/public/logo512.png\
 create mode 100644 react/faker-api/faker_api/public/manifest.json\
 create mode 100644 react/faker-api/faker_api/public/robots.txt\
 create mode 100644 react/faker-api/faker_api/server/server.js\
 create mode 100644 react/faker-api/faker_api/src/App.css\
 create mode 100644 react/faker-api/faker_api/src/App.js\
 create mode 100644 react/faker-api/faker_api/src/App.test.js\
 create mode 100644 react/faker-api/faker_api/src/index.css\
 create mode 100644 react/faker-api/faker_api/src/index.js\
 create mode 100644 react/faker-api/faker_api/src/logo.svg\
 create mode 100644 react/faker-api/faker_api/src/serviceWorker.js\
 create mode 100644 react/faker-api/faker_api/src/setupTests.js\
yotsugi:react aki$ git push\
Enumerating objects: 13, done.\
Counting objects: 100% (13/13), done.\
Delta compression using up to 8 threads\
Compressing objects: 100% (9/9), done.\
Writing objects: 100% (11/11), 146.99 KiB | 7.35 MiB/s, done.\
Total 11 (delta 2), reused 0 (delta 0)\
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.\
To https://github.com/akimi-yano/mern-stack.git\
   8ca81a9..2ca7c11  master -> master\
yotsugi:react aki$ ls\
axios-pokemon-api	class			first-react-with-jsx	more-forms		package-lock.json	prop-it-up		tabs\
big-inversion		faker-api		hook-form		navbar-context		pokemon-api		putting-it-together	todo-list\
box-generator		first-react		luke-api-walker		node_modules		postmanPokemon		routing-practice\
yotsugi:react aki$ git status\
On branch master\
Your branch is up to date with 'origin/master'.\
\
nothing to commit, working tree clean\
yotsugi:react aki$ brew\
Example usage:\
  brew search [TEXT|/REGEX/]\
  brew info [FORMULA...]\
  brew install FORMULA...\
  brew update\
  brew upgrade [FORMULA...]\
  brew uninstall FORMULA...\
  brew list [FORMULA...]\
\
Troubleshooting:\
  brew config\
  brew doctor\
  brew install --verbose --debug FORMULA\
\
Contributing:\
  brew create [URL [--no-fetch]]\
  brew edit [FORMULA...]\
\
Further help:\
  brew commands\
  brew help [COMMAND]\
  man brew\
  https://docs.brew.sh\
yotsugi:react aki$ ls\
axios-pokemon-api	class			first-react-with-jsx	more-forms		package-lock.json	prop-it-up		tabs\
big-inversion		faker-api		hook-form		navbar-context		pokemon-api		putting-it-together	todo-list\
box-generator		first-react		luke-api-walker		node_modules		postmanPokemon		routing-practice\
yotsugi:react aki$ cd ..\
yotsugi:mern aki$ cd ..\
yotsugi:Github Repositories aki$ ;s\
-bash: syntax error near unexpected token `;'\
yotsugi:Github Repositories aki$ \\ls\
algorithm-practice		deployable-favorite-books	face_labo			ml_project			sports_orm\
deployable-event		deployable-travel-buddy		face_labo.zip			python				web-fundamentals\
deployable-exam			exam				mern				python_project\
yotsugi:Github Repositories aki$ cd \
yotsugi:~ aki$ ls\
Additional Tags _ HTML.pdf		Library					MIT6_0001F16_Lec4.pdf			Music					hello.txt\
Applications				MIT6_0001F16_Lec1.pdf			MIT6_0001F16_Lec5.pdf			Pictures				mysql_bench_erd_schema.mwb\
Desktop					MIT6_0001F16_Lec10.pdf			MIT6_0001F16_Lec6.pdf			Postman					mysql_bench_erd_schema.mwb.bak\
Documents				MIT6_0001F16_Lec11.pdf			MIT6_0001F16_Lec7.pdf			Public					test\
Downloads				MIT6_0001F16_Lec12.pdf			MIT6_0001F16_Lec8.pdf			Terminal Commands _ Terminal Basics.pdf	workflow_flask.rtf\
FAQ _ CSS & CSS3.pdf			MIT6_0001F16_Lec2.pdf			MIT6_0001F16_Lec9.pdf			eCommerce.pdf\
Git! _ CSS & CSS3.pdf			MIT6_0001F16_Lec3.pdf			Movies					epswireframe.pdf\
yotsugi:~ aki$ brew list\
boost		boost-python3	gdbm		libevent	ncurses		protobuf	readline	tmux\
boost-python	cmake		icu4c		mysql		openssl@1.1	python		sqlite		xz\
yotsugi:~ aki$ brew tap mongodb/brew\
Updating Homebrew...\
\cf16 ==>\cf3  
\f1\b Auto-updated Homebrew!
\f0\b0 \
Updated 2 taps (homebrew/core and homebrew/services).\
\cf16 ==>\cf3  
\f1\b New Formulae
\f0\b0 \
abseil                       cassandra-cpp-driver         go@1.13                      literate-git                 polynote                     seal                         wapm\
biosig                       forcecli                     killswitch                   openlibm                     ruby@2.6                     swift-sh                     zim\
\cf16 ==>\cf3  
\f1\b Updated Formulae
\f0\b0 \

\f1\b cmake \cf10 \uc0\u10004 
\f0\b0 \cf3                            coinutils                         fonttools                         jfrog-cli-go                      netdata                           shfmt\

\f1\b tmux \cf10 \uc0\u10004 
\f0\b0 \cf3                             comby                             format-udf                        jrnl                              netlify-cli                       shogun\
abcm2ps                           commandbox                        freeglut                          jruby                             newman                            simple-scan\
abyss                             conan                             fribidi                           juju                              nfdump                            sk\
agda                              configen                          game-music-emu                    jvgrep                            nginx                             sleuthkit\
aliyun-cli                        consul                            gatsby-cli                        k6                                ngt                               smali\
allure                            contentful-cli                    gcovr                             katago                            nifi                              sn0int\
amazon-ecs-cli                    convox                            gdal                              kcptun                            node                              snapcraft\
amqp-cpp                          coreutils                         gdcm                              kepubify                          ntp                               solr\
angle-grinder                     cpp-gsl                           gearman                           kerl                              numpy                             solr@7.7\
angular-cli                       cpprestsdk                        gedit                             keydb                             numpy@1.16                        spatialite-gui\
ansible                           cpptest                           gegl                              kompose                           nvm                               spatialite-tools\
apache-spark                      crc                               geoipupdate                       kops                              nwchem                            sphinx-doc\
apollo-cli                        credstash                         getdns                            kotlin                            octave                            spotbugs\
appstream-glib                    cromwell                          gh                                krakend                           okteto                            sqlmap\
arangodb                          css-crush                         ghc                               krb5                              omega                             starship\
arduino-cli                       cstore_fdw                        ghc@8.6                           kubeseal                          opa                               stgit\
arm-linux-gnueabihf-binutils      csvtomd                           gibo                              kubespy                           openblas                          stlink\
arpack                            curl                              git-annex                         lapack                            opencv                            stress-ng\
asdf                              curl-openssl                      git-cinnabar                      latex2html                        opencv@3                          suite-sparse\
astrometry-net                    dasm                              git-delta                         lazygit                           openfortivpn                      sundials\
asymptote                         datamash                          git-filter-repo                   lcov                              osm2pgsql                         swiftformat\
auditbeat                         dav1d                             git-fixup                         lego                              osquery                           sync_gateway\
autorest                          ddrescue                          git-ftp                           leiningen                         pandoc-crossref                   tealdeer\
aws-cdk                           deark                             git-quick-stats                   less                              parallel                          telegraf\
aws-google-auth                   deno                              git-remote-gcrypt                 lesspipe                          pari                              teleport\
aws-sdk-cpp                       devdash                           gitlab-gem                        lft                               passenger                         telnet\
awscli@1                          devspace                          gitlab-runner                     libfido2                          pastel                            telnetd\
awsume                            dhall                             gitleaks                          libgaiagraphics                   pdfpc                             tepl\
azure-storage-cpp                 dhall-bash                        glade                             libgeotiff                        pdftoipe                          terraform\
b3sum                             dhall-json                        gleam                             libgphoto2                        percona-toolkit                   terragrunt\
babel                             dhall-lsp-server                  glib                              libgr                             petsc                             tflint\
babl                              diff-pdf                          glib-networking                   libjwt                            petsc-complex                     tokei\
balena-cli                        discount                          glooctl                           liblo                             pgpool-ii                         topgrade\
ballerina                         django-completion                 gmsh                              liblouis                          phoronix-test-suite               typescript\
bandwhich                         docfx                             gmt                               liblwgeom                         phpstan                           ucon64\
bareos-client                     docker                            gmt@5                             libmpdclient                      pjproject                         unbound\
bazel                             docker-completion                 go                                libmypaint                        plantuml                          urh\
bear                              docker-slim                       go-bindata                        libnotify                         poetry                            v8\
berglas                           dosbox-x                          go-jira                           libphonenumber                    poppler                           vala\
bibtexconv                        dps8m                             go-statik                         libquantum                        postgis                           valabind\
binaryen                          draco                             godep                             librasterlite                     procs                             vale\
bit                               dune                              golo                              libsoup                           proftpd                           vaulted\
bitrise                           duplicity                         goreleaser                        libspatialite                     proj                              vegeta\
bluepill                          duply                             govc                              libstfl                           proteinortho                      velero\
bowtie2                           dust                              gprof2dot                         libtorrent-rasterbar              protobuf-c                        vim\
bundletool                        dvc                               gptfdisk                          libtrng                           protoc-gen-go                     visp\
byteman                           dxpy                              gradle                            libunwind-headers                 psftools                          vte3\
cacli                             dyld-headers                      grails                            libvirt                           pulumi                            wasmer\
caddy                             dynare                            graphicsmagick                    libvmaf                           pumba                             wdc\
calabash                          ejabberd                          graphviz                          libxkbcommon                      pwntools                          weaver\
calicoctl                         ejdb                              grpc                              libxo                             py3cairo                          webpack\
camlp5                            elixir                            grpc-swift                        logrotate                         qca                               whistle\
cargo-instruments                 elm-format                        gx                                logstash                          qrupdate                          wiremock-standalone\
cartridge-cli                     emscripten                        h264bitstream                     logtalk                           r                                 wireshark\
ccm                               enchant                           hcloud                            ltl2ba                            rancid                            wtf\
cedille                           erlang                            helmfile                          lxc                               ratfor                            wtfutil\
ceres-solver                      erlang@20                         hg-fast-export                    mackup                            re2                               x86_64-elf-binutils\
certigo                           erlang@21                         hmmer                             macvim                            rebar3                            xapian\
cf-tool                           etcd                              hopenpgp-tools                    mame                              repo                              xcodegen\
cfengine                          exploitdb                         htmldoc                           man-db                            rom-tools                         xmake\
cfn-lint                          eye-d3                            hub                               mapserver                         root                              xmrig\
cfssl                             faas-cli                          hugo                              meson                             rpcgen                            xonsh\
cgal                              fakeroot                          i2p                               metricbeat                        rsyslog                           xrootd\
cglm                              faudio                            i2pd                              micro                             ruby-build                        yarn\
chamber                           fdupes                            idnits                            mill                              ruby@2.4                          yaz\
checkstyle                        fileicon                          imagemagick                       minio                             ruby@2.5                          yle-dl\
chicken                           firebase-cli                      imagemagick@6                     minio-mc                          rust                              youtube-dl\
circleci                          flow                              imapfilter                        mk-configure                      sbcl                              yq\
citus                             fluent-bit                        imgproxy                          mkvtoolnix                        scalapack                         zabbix\
clblast                           fluid-synth                       ios-webkit-debug-proxy            molecule                          scc                               zero-install\
clojure-lsp                       flvmeta                           ipfs                              monetdb                           sccache                           zookeeper\
closure-compiler                  flyway                            ipopt                             mongo-c-driver                    scipy                             zsh-syntax-highlighting\
clp                               fn                                istioctl                          mongoose                          serverless                        zshdb\
cobalt                            fobis                             jenkins                           n                                 shadowenv                         zydis\
coccinelle                        folly                             jenkins-lts                       ne                                shairport-sync\
cocoapods                         fon-flash-cli                     jetty                             needle                            shellharden\
\cf16 ==>\cf3  
\f1\b Deleted Formulae
\f0\b0 \
arx                      cless                    ghc@8.2                  jpcsp                    neal                     openjdk@12               sshrc                    wu\
\
\cf16 ==>\cf3  
\f1\b Tapping mongodb/brew
\f0\b0 \
Cloning into '/usr/local/Homebrew/Library/Taps/mongodb/homebrew-brew'...\
remote: Enumerating objects: 82, done.\
remote: Counting objects: 100% (82/82), done.\
remote: Compressing objects: 100% (76/76), done.\
remote: Total 141 (delta 39), reused 15 (delta 6), pack-reused 59\
Receiving objects: 100% (141/141), 29.58 KiB | 7.39 MiB/s, done.\
Resolving deltas: 100% (66/66), done.\
Tapped 6 formulae (33 files, 82.2KB).\
yotsugi:~ aki$ brew install mongodb-community@4.2\
\cf16 ==>\cf3  
\f1\b Installing mongodb-community from mongodb/brew
\f0\b0 \
\cf16 ==>\cf3  
\f1\b Downloading https://fastdl.mongodb.org/osx/mongodb-macos-x86_64-4.2.3.tgz
\f0\b0 \
######################################################################## 100.0%\
\cf16 ==>\cf3  
\f1\b Caveats
\f0\b0 \
To have launchd start mongodb/brew/mongodb-community now and restart at login:\
  brew services start mongodb/brew/mongodb-community\
Or, if you don't want/need a background service you can just run:\
  mongod --config /usr/local/etc/mongod.conf\
\cf16 ==>\cf3  
\f1\b Summary
\f0\b0 \

\f2 \uc0\u55356 \u57210 
\f0   /usr/local/Cellar/mongodb-community/4.2.3: 21 files, 304.3MB, built in 22 seconds\
yotsugi:~ aki$ ls\
Additional Tags _ HTML.pdf		Library					MIT6_0001F16_Lec4.pdf			Music					hello.txt\
Applications				MIT6_0001F16_Lec1.pdf			MIT6_0001F16_Lec5.pdf			Pictures				mysql_bench_erd_schema.mwb\
Desktop					MIT6_0001F16_Lec10.pdf			MIT6_0001F16_Lec6.pdf			Postman					mysql_bench_erd_schema.mwb.bak\
Documents				MIT6_0001F16_Lec11.pdf			MIT6_0001F16_Lec7.pdf			Public					test\
Downloads				MIT6_0001F16_Lec12.pdf			MIT6_0001F16_Lec8.pdf			Terminal Commands _ Terminal Basics.pdf	workflow_flask.rtf\
FAQ _ CSS & CSS3.pdf			MIT6_0001F16_Lec2.pdf			MIT6_0001F16_Lec9.pdf			eCommerce.pdf\
Git! _ CSS & CSS3.pdf			MIT6_0001F16_Lec3.pdf			Movies					epswireframe.pdf\
yotsugi:~ aki$ brew services start mongodb-community\
\cf16 ==>\cf3  
\f1\b Successfully started `mongodb-community` (label: homebrew.mxcl.mongodb-community)
\f0\b0 \
yotsugi:~ aki$ mongo\
MongoDB shell version v4.2.3\
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb\
Implicit session: session \{ "id" : UUID("60ca9d1f-860a-4978-beda-bbe9d7046ec9") \}\
MongoDB server version: 4.2.3\
Welcome to the MongoDB shell.\
For interactive help, type "help".\
For more comprehensive documentation, see\
	http://docs.mongodb.org/\
Questions? Try the support group\
	http://groups.google.com/group/mongodb-user\
Server has startup warnings: \
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] \
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.\
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.\
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] \
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] \
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] ** WARNING: soft rlimits too low. Number of files is 256, should be at least 1000\
---\
Enable MongoDB's free cloud-based monitoring service, which will then receive and display\
metrics about your deployment (disk utilization, CPU, operation statistics, etc).\
\
The monitoring data will be available on a MongoDB website with a unique URL accessible to you\
and anyone you share the URL with. MongoDB may use this information to make product\
improvements and to suggest MongoDB products and deployment options to you.\
\
To enable free monitoring, run the following command: db.enableFreeMonitoring()\
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()\
---\
\
> ^C\
bye\
yotsugi:~ aki$ brew services start mongodb-community\
Service `mongodb-community` already started, use `brew services restart mongodb-community` to restart.\
yotsugi:~ aki$ mongo\
MongoDB shell version v4.2.3\
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb\
Implicit session: session \{ "id" : UUID("185ae439-1f69-4241-9a8d-bb4b555fa27d") \}\
MongoDB server version: 4.2.3\
Server has startup warnings: \
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] \
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.\
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.\
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] \
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] \
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] ** WARNING: soft rlimits too low. Number of files is 256, should be at least 1000\
---\
Enable MongoDB's free cloud-based monitoring service, which will then receive and display\
metrics about your deployment (disk utilization, CPU, operation statistics, etc).\
\
The monitoring data will be available on a MongoDB website with a unique URL accessible to you\
and anyone you share the URL with. MongoDB may use this information to make product\
improvements and to suggest MongoDB products and deployment options to you.\
\
To enable free monitoring, run the following command: db.enableFreeMonitoring()\
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()\
---\
\
> cls\
\
> \
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
  db.students.insert(\{name: Greg", home_state: "NY", lucky_number: 1, birthday: \{month: 12, day: 25, year: 2010\}\})\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
  db.students.insert(\{name: "Greg", home_state: "NY", lucky_number: 1, birthday: \{month: 12, day: 25, year: 2010\}\})\
WriteResult(\{ "nInserted" : 1 \})\
> db.students.insert(\{name: "Mike", home_state: "TX", lucky_number: 7, birthday: \{month: 6, day: 7, year: 2000\}\})\
WriteResult(\{ "nInserted" : 1 \})\
> db.students.insert(\{name: "Mina", home_state: "TN", lucky_number: 3, birthday: \{month: 9, day: 1, year: 1888\}\})\
WriteResult(\{ "nInserted" : 1 \})\
> db.students.insert(\{name: "Sake", home_state: "MN", lucky_number: 4, birthday: \{month: 6, day: 19, year: 1997\}\})\
WriteResult(\{ "nInserted" : 1 \})\
> db.students.insert(\{name: "Austin", home_state: "CO", lucky_number: 8, birthday: \{month: 2, day: 5, year: 1897\}\})\
WriteResult(\{ "nInserted" : 1 \})\
> db.students.find().pretty()\
\{\
	"_id" : ObjectId("5e6305b3930c689ab2d1523a"),\
	"name" : "Dylan",\
	"home_state" : "CA",\
	"lucky_number" : 7,\
	"birthday" : \{\
		"month" : 11,\
		"day" : 11,\
		"ywar" : 2011\
	\}\
\}\
\{\
	"_id" : ObjectId("5e63072e930c689ab2d1523b"),\
	"name" : "Greg",\
	"home_state" : "NY",\
	"lucky_number" : 1,\
	"birthday" : \{\
		"month" : 12,\
		"day" : 25,\
		"year" : 2010\
	\}\
\}\
\{\
	"_id" : ObjectId("5e63078e930c689ab2d1523c"),\
	"name" : "Mike",\
	"home_state" : "TX",\
	"lucky_number" : 7,\
	"birthday" : \{\
		"month" : 6,\
		"day" : 7,\
		"year" : 2000\
	\}\
\}\
\{\
	"_id" : ObjectId("5e6307bb930c689ab2d1523d"),\
	"name" : "Mina",\
	"home_state" : "TN",\
	"lucky_number" : 3,\
	"birthday" : \{\
		"month" : 9,\
		"day" : 1,\
		"year" : 1888\
	\}\
\}\
\{\
	"_id" : ObjectId("5e6307fc930c689ab2d1523e"),\
	"name" : "Sake",\
	"home_state" : "MN",\
	"lucky_number" : 4,\
	"birthday" : \{\
		"month" : 6,\
		"day" : 19,\
		"year" : 1997\
	\}\
\}\
\{\
	"_id" : ObjectId("5e63083f930c689ab2d1523f"),\
	"name" : "Austin",\
	"home_state" : "CO",\
	"lucky_number" : 8,\
	"birthday" : \{\
		"month" : 2,\
		"day" : 5,\
		"year" : 1897\
	\}\
\}\
> db.students.find($or:[\{home_state: "CA"\}, \{home_state: "WN"\}])\
2020-03-06T18:53:03.981-0800 E  QUERY    [js] uncaught exception: SyntaxError: missing ) after argument list :\
@(shell):1:20\
> db.students.find(\{$or:[\{home_state: "CA"\}, \{home_state: "WN"\}]\})\
\{ "_id" : ObjectId("5e6305b3930c689ab2d1523a"), "name" : "Dylan", "home_state" : "CA", "lucky_number" : 7, "birthday" : \{ "month" : 11, "day" : 11, "ywar" : 2011 \} \}\
> db.students.find(\{$or:[\{home_state: "CA"\}, \{home_state: "WN"\}]\}).pretty()\
\{\
	"_id" : ObjectId("5e6305b3930c689ab2d1523a"),\
	"name" : "Dylan",\
	"home_state" : "CA",\
	"lucky_number" : 7,\
	"birthday" : \{\
		"month" : 11,\
		"day" : 11,\
		"ywar" : 2011\
	\}\
\}\
> db.students.find(\{lucky_number: \{$gt:3\}\})\
\{ "_id" : ObjectId("5e6305b3930c689ab2d1523a"), "name" : "Dylan", "home_state" : "CA", "lucky_number" : 7, "birthday" : \{ "month" : 11, "day" : 11, "ywar" : 2011 \} \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \} \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \} \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \} \}\
> db.students.find(\{lucky_number: \{$lte:10\}\})\
\{ "_id" : ObjectId("5e6305b3930c689ab2d1523a"), "name" : "Dylan", "home_state" : "CA", "lucky_number" : 7, "birthday" : \{ "month" : 11, "day" : 11, "ywar" : 2011 \} \}\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \} \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \} \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \} \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \} \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \} \}\
> db.students.find(\{$and:[\{$gte:1\},\{$lte:9\}]\})\
Error: error: \{\
	"ok" : 0,\
	"errmsg" : "unknown top level operator: $gte",\
	"code" : 2,\
	"codeName" : "BadValue"\
\}\
> db.students.find(\{$and:[\{lucky_number:\{$gte:1\}\},\{lucky_number:\{$lte:9\}\}]\})\
\{ "_id" : ObjectId("5e6305b3930c689ab2d1523a"), "name" : "Dylan", "home_state" : "CA", "lucky_number" : 7, "birthday" : \{ "month" : 11, "day" : 11, "ywar" : 2011 \} \}\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \} \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \} \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \} \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \} \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \} \}\
> db.students.update(\{\}, \{$set:['coding', 'brunch', 'MongoDB']\})\
WriteResult(\{\
	"nMatched" : 0,\
	"nUpserted" : 0,\
	"nModified" : 0,\
	"writeError" : \{\
		"code" : 9,\
		"errmsg" : "Modifiers operate on fields but we found type array instead. For example: \{$mod: \{<field>: ...\}\} not \{$set: [ \\"coding\\", \\"brunch\\", \\"MongoDB\\" ]\}"\
	\}\
\})\
> db.students.update(\{\}, \{$set:\{interests:\{$push:['coding', 'brunch', 'MongoDB']\}\}\})\
WriteResult(\{\
	"nMatched" : 0,\
	"nUpserted" : 0,\
	"nModified" : 0,\
	"writeError" : \{\
		"code" : 52,\
		"errmsg" : "The dollar ($) prefixed field '$push' in 'interests.$push' is not valid for storage."\
	\}\
\})\
> db.students.update(\{\}, \{$set:\{$push:\{interests: 'coding'\},\{interests: 'brunch'\}, \{interests: 'MongoDB'\}\}\})\
2020-03-06T19:21:04.754-0800 E  QUERY    [js] uncaught exception: SyntaxError: expected property name, got '\{' :\
@(shell):1:58\
> db.students.update(\{\}, \{$set:\{$push:[\{interests: 'coding'\},\{interests: 'brunch'\}, \{interests: 'MongoDB'\}]\}\})\
WriteResult(\{\
	"nMatched" : 0,\
	"nUpserted" : 0,\
	"nModified" : 0,\
	"writeError" : \{\
		"code" : 52,\
		"errmsg" : "The dollar ($) prefixed field '$push' in '$push' is not valid for storage."\
	\}\
\})\
> db.students.update(\{\}, \{$set:\{$push:\{interests:\{$each: ['coding', 'brunch', 'MongoDB']\}\}\})\
... db.students.find()\
... \
... db.students.find().pretty()\
... ;\
... \
... \
> \
> db.student.find().pretty()\
> \
> dbs\
2020-03-06T19:34:01.222-0800 E  QUERY    [js] uncaught exception: ReferenceError: dbs is not defined :\
@(shell):1:1\
> show dbs\
admin        0.000GB\
config       0.000GB\
local        0.000GB\
my_first_db  0.000GB\
> use my_first_db\
switched to db my_first_db\
> show tables\
students\
> db.students.find()\
\{ "_id" : ObjectId("5e6305b3930c689ab2d1523a"), "name" : "Dylan", "home_state" : "CA", "lucky_number" : 7, "birthday" : \{ "month" : 11, "day" : 11, "ywar" : 2011 \} \}\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \} \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \} \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \} \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \} \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \} \}\
> db.students.update(\{interests:[]\})\
2020-03-06T19:35:19.839-0800 E  QUERY    [js] uncaught exception: Error: need an update object or pipeline :\
DBCollection.prototype._parseUpdate@src/mongo/shell/collection.js:446:15\
DBCollection.prototype.update@src/mongo/shell/collection.js:492:18\
@(shell):1:1\
> db.students.update(\{\},\{interests:[]\})\
WriteResult(\{ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e6305b3930c689ab2d1523a"), "interests" : [ ] \}\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \} \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \} \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \} \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \} \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \} \}\
> db.students.deleteById("5e6305b3930c689ab2d1523a")\
2020-03-06T19:36:06.557-0800 E  QUERY    [js] uncaught exception: TypeError: db.students.deleteById is not a function :\
@(shell):1:1\
> db.students.deleteOne(\{_id:5e6305b3930c689ab2d1523a\})\
2020-03-06T19:36:26.475-0800 E  QUERY    [js] uncaught exception: SyntaxError: identifier starts immediately after numeric literal :\
@(shell):1:27\
> db.students.deleteOne(\{_id:"5e6305b3930c689ab2d1523a"\})\
\{ "acknowledged" : true, "deletedCount" : 0 \}\
> db.students.find()\
\{ "_id" : ObjectId("5e6305b3930c689ab2d1523a"), "interests" : [ ] \}\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \} \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \} \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \} \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \} \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \} \}\
> db.students.delete(\{_id:"5e6305b3930c689ab2d1523a"\})\
2020-03-06T19:37:11.507-0800 E  QUERY    [js] uncaught exception: TypeError: db.students.delete is not a function :\
@(shell):1:1\
> db.students.deleteOne(\{_id:"5e6305b3930c689ab2d1523a"\})\
\{ "acknowledged" : true, "deletedCount" : 0 \}\
> db.students.deleteOne(\{"_id":ObjectId("5e6305b3930c689ab2d1523a")\})\
\{ "acknowledged" : true, "deletedCount" : 1 \}\
> db.students.find()\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \} \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \} \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \} \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \} \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \} \}\
> db.students.update(\{\},\{$set:\{interests:[]\}\})\
WriteResult(\{ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \}, "interests" : [ ] \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \} \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \} \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \} \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \} \}\
> db.students.update(\{\},\{$set:\{interests:[]\}\}, \{mutli:true\})\
WriteResult(\{ "nMatched" : 1, "nUpserted" : 0, "nModified" : 0 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \}, "interests" : [ ] \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \} \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \} \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \} \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \} \}\
> db.students.update(\{\},\{$set:\{interests:[]\}\}, \{multi:true\})\
WriteResult(\{ "nMatched" : 5, "nUpserted" : 0, "nModified" : 4 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \}, "interests" : [ ] \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \}, "interests" : [ ] \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ ] \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \}, "interests" : [ ] \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ ] \}\
> db.students.update(\{\},\{$set:\{interests:['coding', 'brunch', 'MongoDB']\}\}, \{multi:true\})\
WriteResult(\{ "nMatched" : 5, "nUpserted" : 0, "nModified" : 5 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
> db.students.update(\{\},\{$set:\{interests:['coding', 'brunch', 'MongoDB']\}\}, \{multi:true\})\
WriteResult(\{ "nMatched" : 5, "nUpserted" : 0, "nModified" : 0 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
> db.students.update(\{name:"Greg\},\{$set:\{$push:\{interest:"climbing"\}\}\})\
2020-03-06T20:10:14.558-0800 E  QUERY    [js] uncaught exception: SyntaxError: missing \} after property list :\
@(shell):1:56\
> db.students.update(\{name:"Greg\},\{$set:\{$push:\{interests:"climbing"\}\}\})\
2020-03-06T20:11:09.801-0800 E  QUERY    [js] uncaught exception: SyntaxError: missing \} after property list :\
@(shell):1:57\
> db.students.update(\{name:"Greg"\},\{$set:\{$push:\{interests:"climbing"\}\}\})\
WriteResult(\{\
	"nMatched" : 0,\
	"nUpserted" : 0,\
	"nModified" : 0,\
	"writeError" : \{\
		"code" : 52,\
		"errmsg" : "The dollar ($) prefixed field '$push' in '$push' is not valid for storage."\
	\}\
\})\
> de.students.find()\
2020-03-06T20:12:07.143-0800 E  QUERY    [js] uncaught exception: ReferenceError: de is not defined :\
@(shell):1:1\
> db.students.find()\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
> db.students.update(\{name:"Greg"\},\{$push:\{interests:"climbing"\}\})\
WriteResult(\{ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \}, "interests" : [ "coding", "brunch", "MongoDB", "climbing" ] \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
> db.students.update(\{name:"Greg"\},\{$push:\{interests:"climbing"\}\})\
WriteResult(\{ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 \})\
> db.students.update(\{name:"Mike"\},\{$push:\{interests:"traveling"\}\})\
WriteResult(\{ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \}, "interests" : [ "coding", "brunch", "MongoDB", "climbing", "climbing" ] \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \}, "interests" : [ "coding", "brunch", "MongoDB", "traveling" ] \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
> db.students.update(\{name:"Mina"\},\{$push:\{interests:"tower of hanoi"\}\})\
WriteResult(\{ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \}, "interests" : [ "coding", "brunch", "MongoDB", "climbing", "climbing" ] \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \}, "interests" : [ "coding", "brunch", "MongoDB", "traveling" ] \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ] \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "coding", "brunch", "MongoDB" ] \}\
> db.students.update(\{name:"Sake"\},\{$push:\{interests:"living in a van"\}\})\
WriteResult(\{ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 \})\
> db.students.update(\{name:"Austin"\},\{$push:\{interests:"bobaaaaa"\}\})\
WriteResult(\{ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \}, "interests" : [ "coding", "brunch", "MongoDB", "climbing", "climbing" ] \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \}, "interests" : [ "coding", "brunch", "MongoDB", "traveling" ] \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ] \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \}, "interests" : [ "coding", "brunch", "MongoDB", "living in a van" ] \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "coding", "brunch", "MongoDB", "bobaaaaa" ] \}\
> db.students.update(\{name:"Austin"\},\{$push:\{interests:"taxes"\}\})\
WriteResult(\{ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \}, "interests" : [ "coding", "brunch", "MongoDB", "climbing", "climbing" ] \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \}, "interests" : [ "coding", "brunch", "MongoDB", "traveling" ] \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ] \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \}, "interests" : [ "coding", "brunch", "MongoDB", "living in a van" ] \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "coding", "brunch", "MongoDB", "bobaaaaa", "taxes" ] \}\
> db.students.update(\{name:"Austin"\},\{$pop:\{interests:"taxes"\}\})\
WriteResult(\{\
	"nMatched" : 0,\
	"nUpserted" : 0,\
	"nModified" : 0,\
	"writeError" : \{\
		"code" : 9,\
		"errmsg" : "Expected a number in: interests: \\"taxes\\""\
	\}\
\})\
> db.students.find()\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \}, "interests" : [ "coding", "brunch", "MongoDB", "climbing", "climbing" ] \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \}, "interests" : [ "coding", "brunch", "MongoDB", "traveling" ] \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ] \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \}, "interests" : [ "coding", "brunch", "MongoDB", "living in a van" ] \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "coding", "brunch", "MongoDB", "bobaaaaa", "taxes" ] \}\
> db.students.update(\{name:"Austin"\},\{$pop:\{interests:-1\}\})\
WriteResult(\{ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \}, "interests" : [ "coding", "brunch", "MongoDB", "climbing", "climbing" ] \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \}, "interests" : [ "coding", "brunch", "MongoDB", "traveling" ] \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ] \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \}, "interests" : [ "coding", "brunch", "MongoDB", "living in a van" ] \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "brunch", "MongoDB", "bobaaaaa", "taxes" ] \}\
> db.students.update(\{name:"Austin"\},\{$pop:\{interests:1\}\})\
WriteResult(\{ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \}, "interests" : [ "coding", "brunch", "MongoDB", "climbing", "climbing" ] \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \}, "interests" : [ "coding", "brunch", "MongoDB", "traveling" ] \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ] \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \}, "interests" : [ "coding", "brunch", "MongoDB", "living in a van" ] \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "brunch", "MongoDB", "bobaaaaa" ] \}\
> db.students.remove(\{home_state: "CA"\})\
WriteResult(\{ "nRemoved" : 0 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e63072e930c689ab2d1523b"), "name" : "Greg", "home_state" : "NY", "lucky_number" : 1, "birthday" : \{ "month" : 12, "day" : 25, "year" : 2010 \}, "interests" : [ "coding", "brunch", "MongoDB", "climbing", "climbing" ] \}\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \}, "interests" : [ "coding", "brunch", "MongoDB", "traveling" ] \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ] \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \}, "interests" : [ "coding", "brunch", "MongoDB", "living in a van" ] \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "brunch", "MongoDB", "bobaaaaa" ] \}\
> db.students.remove(\{home_state: "NY"\})\
WriteResult(\{ "nRemoved" : 1 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \}, "interests" : [ "coding", "brunch", "MongoDB", "traveling" ] \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ] \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \}, "interests" : [ "coding", "brunch", "MongoDB", "living in a van" ] \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "brunch", "MongoDB", "bobaaaaa" ] \}\
> db.students.find()\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \}, "interests" : [ "coding", "brunch", "MongoDB", "traveling" ] \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ] \}\
\{ "_id" : ObjectId("5e6307fc930c689ab2d1523e"), "name" : "Sake", "home_state" : "MN", "lucky_number" : 4, "birthday" : \{ "month" : 6, "day" : 19, "year" : 1997 \}, "interests" : [ "coding", "brunch", "MongoDB", "living in a van" ] \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "brunch", "MongoDB", "bobaaaaa" ] \}\
> db.students.remove(\{name: "Sake"\})\
WriteResult(\{ "nRemoved" : 1 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e63078e930c689ab2d1523c"), "name" : "Mike", "home_state" : "TX", "lucky_number" : 7, "birthday" : \{ "month" : 6, "day" : 7, "year" : 2000 \}, "interests" : [ "coding", "brunch", "MongoDB", "traveling" ] \}\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ] \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "brunch", "MongoDB", "bobaaaaa" ] \}\
> db.students.remove(\{lucky_number: \{$gt:\}\},true)\
2020-03-06T21:54:58.035-0800 E  QUERY    [js] uncaught exception: SyntaxError: expected expression, got '\}' :\
@(shell):1:39\
> db.students.remove(\{lucky_number: \{$gt:5\}\},true)\
WriteResult(\{ "nRemoved" : 1 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ] \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "brunch", "MongoDB", "bobaaaaa" ] \}\
> db.students.update(\{\},\{$set:\{number_of_belts: 0\}\},\{multi:true\})\
WriteResult(\{ "nMatched" : 2, "nUpserted" : 0, "nModified" : 2 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ], "number_of_belts" : 0 \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "brunch", "MongoDB", "bobaaaaa" ], "number_of_belts" : 0 \}\
> db.students.find()\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ], "number_of_belts" : 0 \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "brunch", "MongoDB", "bobaaaaa" ], "number_of_belts" : 0 \}\
> db.students.update(\{home_state: "CO"\},\{$set:\{number_of_belts:+1\}\})\
WriteResult(\{ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ], "number_of_belts" : 0 \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "brunch", "MongoDB", "bobaaaaa" ], "number_of_belts" : 1 \}\
> db.students.updateMany(\{\},\{$rename:\{"number_of_belts":"belts_earned"\}\})\
\{ "acknowledged" : true, "matchedCount" : 2, "modifiedCount" : 2 \}\
> db.students.find()\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ], "belts_earned" : 0 \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "brunch", "MongoDB", "bobaaaaa" ], "belts_earned" : 1 \}\
> db.students.find()\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "lucky_number" : 3, "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ], "belts_earned" : 0 \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "lucky_number" : 8, "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "brunch", "MongoDB", "bobaaaaa" ], "belts_earned" : 1 \}\
> db.students.updateMany(\{\},\{$unset\{lucky_number:""\}\})\
2020-03-06T23:36:59.920-0800 E  QUERY    [js] uncaught exception: SyntaxError: missing : after property id :\
@(shell):1:33\
> db.students.updateMany(\{\},\{$unset:\{lucky_number:""\}\})\
\{ "acknowledged" : true, "matchedCount" : 2, "modifiedCount" : 2 \}\
> db.students.find()\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ], "belts_earned" : 0 \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "brunch", "MongoDB", "bobaaaaa" ], "belts_earned" : 1 \}\
> db.students.updateMany(\{\}, \{$set:\{updated_on: "$$CLUSTER_TIME"\}\})\
\{ "acknowledged" : true, "matchedCount" : 2, "modifiedCount" : 2 \}\
> db.students.find()\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ], "belts_earned" : 0, "updated_on" : "$$CLUSTER_TIME" \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "brunch", "MongoDB", "bobaaaaa" ], "belts_earned" : 1, "updated_on" : "$$CLUSTER_TIME" \}\
> db.students.updateMany(\{\},\{$unset:\{updated_on:""\}\})\
\{ "acknowledged" : true, "matchedCount" : 2, "modifiedCount" : 2 \}\
> db.students.find()\
\{ "_id" : ObjectId("5e6307bb930c689ab2d1523d"), "name" : "Mina", "home_state" : "TN", "birthday" : \{ "month" : 9, "day" : 1, "year" : 1888 \}, "interests" : [ "coding", "brunch", "MongoDB", "tower of hanoi" ], "belts_earned" : 0 \}\
\{ "_id" : ObjectId("5e63083f930c689ab2d1523f"), "name" : "Austin", "home_state" : "CO", "birthday" : \{ "month" : 2, "day" : 5, "year" : 1897 \}, "interests" : [ "brunch", "MongoDB", "bobaaaaa" ], "belts_earned" : 1 \}\
> db.students.updateMany(\{\}, \{$set:\{updated_on:    $currentDate: \{\}\})\
...         lastModified: true,\
...         "cancellation.date": \{ $type: "timestamp" \}\
... db.students.updateMany(\{\}, \{$set:\{updated_on: \{$currentDate:$type:"date"\}\}\})\
\
... db.students.find()\
... db.students.find()^C\
\
> db.students.updateMany(\{\}, \{$set:\{$currentDate:\{updated_on:true\}\}\})\
2020-03-06T23:54:21.752-0800 E  QUERY    [js] WriteError(\{\
	"index" : 0,\
	"code" : 52,\
	"errmsg" : "The dollar ($) prefixed field '$currentDate' in '$currentDate' is not valid for storage.",\
	"op" : \{\
		"q" : \{\
			\
		\},\
		"u" : \{\
			"$set" : \{\
				"$currentDate" : \{\
					"updated_on" : true\
				\}\
			\}\
		\},\
		"multi" : true,\
		"upsert" : false\
	\}\
\}) :\
WriteError(\{\
	"index" : 0,\
	"code" : 52,\
	"errmsg" : "The dollar ($) prefixed field '$currentDate' in '$currentDate' is not valid for storage.",\
	"op" : \{\
		"q" : \{\
			\
		\},\
		"u" : \{\
			"$set" : \{\
				"$currentDate" : \{\
					"updated_on" : true\
				\}\
			\}\
		\},\
		"multi" : true,\
		"upsert" : false\
	\}\
\})\
WriteError@src/mongo/shell/bulk_api.js:458:48\
mergeBatchResults@src/mongo/shell/bulk_api.js:855:49\
executeBatch@src/mongo/shell/bulk_api.js:919:13\
Bulk/this.execute@src/mongo/shell/bulk_api.js:1163:21\
DBCollection.prototype.updateMany@src/mongo/shell/crud_api.js:690:17\
@(shell):1:1\
>    \{ _id: 1 \},\
...    \{\
...      $set: \{ item: "apple" \},\
...      $setOnInsert: \{ dateAdded: new Date() \}\
...    \},\
...    \{ upsert: true \}\
2020-03-06T23:56:45.008-0800 E  QUERY    [js] uncaught exception: SyntaxError: expected expression, got ',' :\
@(shell):1:10\
> \{ _id: 1 \},    \{      $set: \{ item: "apple" \},      $setOnInsert: \{ dateAdded: new Date() \}    \},    \{ upsert: true \}^C\
bye\
yotsugi:~ aki$ brew services start mongodb-community\
Service `mongodb-community` already started, use `brew services restart mongodb-community` to restart.\
yotsugi:~ aki$ mongo\
MongoDB shell version v4.2.3\
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb\
Implicit session: session \{ "id" : UUID("aa859ac5-4d72-43ce-abc0-555d9bf5e8dd") \}\
MongoDB server version: 4.2.3\
Server has startup warnings: \
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] \
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.\
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.\
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] \
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] \
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] ** WARNING: soft rlimits too low. Number of files is 256, should be at least 1000\
---\
Enable MongoDB's free cloud-based monitoring service, which will then receive and display\
metrics about your deployment (disk utilization, CPU, operation statistics, etc).\
\
The monitoring data will be available on a MongoDB website with a unique URL accessible to you\
and anyone you share the URL with. MongoDB may use this information to make product\
improvements and to suggest MongoDB products and deployment options to you.\
\
To enable free monitoring, run the following command: db.enableFreeMonitoring()\
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()\
---\
\
> db.students.find()\
> ^C\
bye\
yotsugi:~ aki$ mongo\
MongoDB shell version v4.2.3\
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb\
Implicit session: session \{ "id" : UUID("f1d25d59-5072-45e4-9e0d-c405fe1eded7") \}\
MongoDB server version: 4.2.3\
Server has startup warnings: \
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] \
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.\
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.\
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] \
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] \
2020-03-06T16:23:40.471-0800 I  CONTROL  [initandlisten] ** WARNING: soft rlimits too low. Number of files is 256, should be at least 1000\
---\
Enable MongoDB's free cloud-based monitoring service, which will then receive and display\
metrics about your deployment (disk utilization, CPU, operation statistics, etc).\
\
The monitoring data will be available on a MongoDB website with a unique URL accessible to you\
and anyone you share the URL with. MongoDB may use this information to make product\
improvements and to suggest MongoDB products and deployment options to you.\
\
To enable free monitoring, run the following command: db.enableFreeMonitoring()\
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()\
---\
\
> use_my_db\
2020-03-07T00:04:39.593-0800 E  QUERY    [js] uncaught exception: ReferenceError: use_my_db is not defined :\
@(shell):1:1\
> use my_db\
switched to db my_db\
> db.createCollection("students")\
\{ "ok" : 1 \}\
> db.students.insert(\{name:"Chris"\})\
WriteResult(\{ "nInserted" : 1 \})\
> db.students.insert(\{name:"Maria"\})\
WriteResult(\{ "nInserted" : 1 \})\
> db.students.insert(\{name:"Chan"\})\
WriteResult(\{ "nInserted" : 1 \})\
> db.students.find()\
\{ "_id" : ObjectId("5e6355f6a7d7dba19696e058"), "name" : "Chris" \}\
\{ "_id" : ObjectId("5e6355ffa7d7dba19696e059"), "name" : "Maria" \}\
\{ "_id" : ObjectId("5e635608a7d7dba19696e05a"), "name" : "Chan" \}\
> db.students.updateMany(\{\}, \{$set: \{$currentDate:\{"updatedOn": \{$type:"date"\}\}\}\})\
2020-03-07T00:11:59.152-0800 E  QUERY    [js] WriteError(\{\
	"index" : 0,\
	"code" : 52,\
	"errmsg" : "The dollar ($) prefixed field '$currentDate' in '$currentDate' is not valid for storage.",\
	"op" : \{\
		"q" : \{\
			\
		\},\
		"u" : \{\
			"$set" : \{\
				"$currentDate" : \{\
					"updatedOn" : \{\
						"$type" : "date"\
					\}\
				\}\
			\}\
		\},\
		"multi" : true,\
		"upsert" : false\
	\}\
\}) :\
WriteError(\{\
	"index" : 0,\
	"code" : 52,\
	"errmsg" : "The dollar ($) prefixed field '$currentDate' in '$currentDate' is not valid for storage.",\
	"op" : \{\
		"q" : \{\
			\
		\},\
		"u" : \{\
			"$set" : \{\
				"$currentDate" : \{\
					"updatedOn" : \{\
						"$type" : "date"\
					\}\
				\}\
			\}\
		\},\
		"multi" : true,\
		"upsert" : false\
	\}\
\})\
WriteError@src/mongo/shell/bulk_api.js:458:48\
mergeBatchResults@src/mongo/shell/bulk_api.js:855:49\
executeBatch@src/mongo/shell/bulk_api.js:919:13\
Bulk/this.execute@src/mongo/shell/bulk_api.js:1163:21\
DBCollection.prototype.updateMany@src/mongo/shell/crud_api.js:690:17\
@(shell):1:1\
> db.students.updateMany(\{\}, \{$set: \{"updatedOn": "TODO"\}\}, false, true\}\
2020-03-07T00:13:19.611-0800 E  QUERY    [js] uncaught exception: SyntaxError: missing ) after argument list :\
@(shell):1:69\
> db.students.updateMany(\{\}, \{$set: \{"updatedOn": "TODO"\}\}, false, true\})\
2020-03-07T00:13:28.552-0800 E  QUERY    [js] uncaught exception: SyntaxError: missing ) after argument list :\
@(shell):1:69\
> db.students.updateMany(\{\}, \{$set: \{"updatedOn": "TODO"\}\}, false, true)\
\{ "acknowledged" : true, "matchedCount" : 3, "modifiedCount" : 3 \}\
> db.students.find()\
\{ "_id" : ObjectId("5e6355f6a7d7dba19696e058"), "name" : "Chris", "updatedOn" : "TODO" \}\
\{ "_id" : ObjectId("5e6355ffa7d7dba19696e059"), "name" : "Maria", "updatedOn" : "TODO" \}\
\{ "_id" : ObjectId("5e635608a7d7dba19696e05a"), "name" : "Chan", "updatedOn" : "TODO" \}\
> \
> db.students.find()\
\{ "_id" : ObjectId("5e6355f6a7d7dba19696e058"), "name" : "Chris", "updatedOn" : "TODO" \}\
\{ "_id" : ObjectId("5e6355ffa7d7dba19696e059"), "name" : "Maria", "updatedOn" : "TODO" \}\
\{ "_id" : ObjectId("5e635608a7d7dba19696e05a"), "name" : "Chan", "updatedOn" : "TODO" \}\
> db.students.updateMany(\{\}, \{$currentDate: \{updatedOn: true\})\
... ^C\
\
> db.students.updateMany(\{\}, \{$currentDate: \{updatedOn: true\}\})\
\{ "acknowledged" : true, "matchedCount" : 3, "modifiedCount" : 3 \}\
> db.students.find()\
\{ "_id" : ObjectId("5e6355f6a7d7dba19696e058"), "name" : "Chris", "updatedOn" : ISODate("2020-03-07T08:16:59.917Z") \}\
\{ "_id" : ObjectId("5e6355ffa7d7dba19696e059"), "name" : "Maria", "updatedOn" : ISODate("2020-03-07T08:16:59.917Z") \}\
\{ "_id" : ObjectId("5e635608a7d7dba19696e05a"), "name" : "Chan", "updatedOn" : ISODate("2020-03-07T08:16:59.917Z") \}\
> db.students.updateMany(\{\}, \{$set: \{"updatedOn": "TODO"\}\}, false, true)\
\{ "acknowledged" : true, "matchedCount" : 3, "modifiedCount" : 3 \}\
> db.students.find()\
\{ "_id" : ObjectId("5e6355f6a7d7dba19696e058"), "name" : "Chris", "updatedOn" : "TODO" \}\
\{ "_id" : ObjectId("5e6355ffa7d7dba19696e059"), "name" : "Maria", "updatedOn" : "TODO" \}\
\{ "_id" : ObjectId("5e635608a7d7dba19696e05a"), "name" : "Chan", "updatedOn" : "TODO" \}\
> db.students.updateMany(\{\}, \{$currentDate: \{updatedOn: true\}\})\
\{ "acknowledged" : true, "matchedCount" : 3, "modifiedCount" : 3 \}\
> db.students.find()\
\{ "_id" : ObjectId("5e6355f6a7d7dba19696e058"), "name" : "Chris", "updatedOn" : ISODate("2020-03-07T08:19:06.363Z") \}\
\{ "_id" : ObjectId("5e6355ffa7d7dba19696e059"), "name" : "Maria", "updatedOn" : ISODate("2020-03-07T08:19:06.363Z") \}\
\{ "_id" : ObjectId("5e635608a7d7dba19696e05a"), "name" : "Chan", "updatedOn" : ISODate("2020-03-07T08:19:06.363Z") \}\
> db.students.updateMany(\{\}, \{$currentDate: \{updatedOn: true\}\})\
\{ "acknowledged" : true, "matchedCount" : 3, "modifiedCount" : 3 \}\
> db.students.find()\
\{ "_id" : ObjectId("5e6355f6a7d7dba19696e058"), "name" : "Chris", "updatedOn" : ISODate("2020-03-07T08:20:57.502Z") \}\
\{ "_id" : ObjectId("5e6355ffa7d7dba19696e059"), "name" : "Maria", "updatedOn" : ISODate("2020-03-07T08:20:57.503Z") \}\
\{ "_id" : ObjectId("5e635608a7d7dba19696e05a"), "name" : "Chan", "updatedOn" : ISODate("2020-03-07T08:20:57.503Z") \}\
> \
}